digraph "Catch::ScopedMessage"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [shape=record,label="{Catch::ScopedMessage\n|+ m_moved\l|+ ScopedMessage()\l+ ScopedMessage()\l+ ScopedMessage()\l+ ~ScopedMessage()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",style="solid",label=" +m_info" ,arrowhead="odiamond"];
  Node2 [shape=record,label="{Catch::MessageInfo\n|+ message\l+ type\l+ sequence\l|+ MessageInfo()\l+ operator==()\l+ operator\<()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$struct_catch_1_1_message_info.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",style="solid",label=" +macroName" ,arrowhead="odiamond"];
  Node3 [shape=record,label="{Catch::StringRef\n||+ StringRef()\l+ StringRef()\l+ StringRef()\l+ StringRef()\l+ operator std::string()\l+ operator==()\l+ operator!=()\l+ operator[]()\l+ empty()\l+ size()\land 6 more...\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_catch_1_1_string_ref.html",tooltip="A non-owning string class (similar to the forthcoming std::string_view) Note that,..."];
  Node4 -> Node2 [color="grey25",style="solid",label=" +lineInfo" ,arrowhead="odiamond"];
  Node4 [shape=record,label="{Catch::SourceLineInfo\n|+ file\l+ line\l|+ SourceLineInfo()\l+ SourceLineInfo()\l+ SourceLineInfo()\l+ operator=()\l+ SourceLineInfo()\l+ operator=()\l+ empty()\l+ operator==()\l+ operator\<()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$struct_catch_1_1_source_line_info.html",tooltip=" "];
}
