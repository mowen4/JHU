digraph "Json::Exception"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [shape=record,label="{Json::Exception\n|# msg_\l|+ Exception()\l+ ~Exception()\l+ what()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Base class for all exceptions we throw."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [shape=record,label="{std::exception\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [shape=record,label="{Json::LogicError\n||+ LogicError()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_json_1_1_logic_error.html",tooltip="Exceptions thrown by JSON_ASSERT/JSON_FAIL macros."];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [shape=record,label="{Json::RuntimeError\n||+ RuntimeError()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_json_1_1_runtime_error.html",tooltip="Exceptions which the user cannot easily avoid."];
}
