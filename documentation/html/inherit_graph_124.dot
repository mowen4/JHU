digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [label="std::exception",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node0 -> Node1 [dir="back",color="steelblue1",style="solid"];
  Node1 [label="Catch::GeneratorException",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_catch_1_1_generator_exception.html",tooltip=" "];
  Node0 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="Json::Exception",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_json_1_1_exception.html",tooltip="Base class for all exceptions we throw."];
  Node2 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="Json::LogicError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_json_1_1_logic_error.html",tooltip="Exceptions thrown by JSON_ASSERT/JSON_FAIL macros."];
  Node2 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="Json::RuntimeError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_json_1_1_runtime_error.html",tooltip="Exceptions which the user cannot easily avoid."];
}
