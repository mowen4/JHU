digraph "Catch::ITransientExpression"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [shape=record,label="{Catch::ITransientExpression\n|+ m_isBinaryExpression\l+ m_result\l|+ isBinaryExpression()\l+ getResult()\l+ streamReconstructedExpression()\l+ ITransientExpression()\l+ ~ITransientExpression()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [shape=record,label="{Catch::BinaryExpr\<\l LhsT, RhsT \>\n||+ BinaryExpr()\l+ operator&&()\l+ operator\|\|()\l+ operator==()\l+ operator!=()\l+ operator\>()\l+ operator\<()\l+ operator\>=()\l+ operator\<=()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_catch_1_1_binary_expr.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [shape=record,label="{Catch::MatchExpr\< ArgT,\l MatcherT \>\n||+ MatchExpr()\l+ streamReconstructedExpression()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_catch_1_1_match_expr.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [shape=record,label="{Catch::UnaryExpr\< LhsT \>\n||+ UnaryExpr()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_catch_1_1_unary_expr.html",tooltip=" "];
}
